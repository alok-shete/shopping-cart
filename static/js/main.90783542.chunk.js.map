{"version":3,"sources":["components/Product.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Product","prop","className","cx","src","photo","alt","name","price","type","bCart","onClick","addCart","product","mCart","Cart","width","height","rmCart","App","state","products","id","cart","count","totalPrice","show","order","total","index","indexOf","i","length","setState","handleClose","handleShow","orderPlace","this","href","placeholder","aria-label","Button","variant","Modal","onHide","Header","closeButton","Title","Body","Table","responsive","map","aria-hidden","Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.90783542.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport cx from \"classnames\";\n\nconst Product = (prop) => {\n  return (\n    <div className={cx(\"card\", \"text-center\", \"col-12\")}>\n      <div className=\"card-body\">\n        <img\n          className={cx(\"card-img-top\", \"img-fluid\")}\n          src={prop.photo}\n          alt=\"CardImage\"\n        />\n        <h5 className=\"card-title\">\n          <b>{prop.name}</b>\n        </h5>\n\n        <b>\n          <p>&#36; {prop.price}</p>\n        </b>\n        <button\n          type=\"button\"\n          className={prop.bCart}\n          onClick={() => prop.addCart(prop.product)}\n        >\n          {prop.mCart}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport cx from \"classnames\";\nconst Cart = (prop) => {\n  return (\n    <tr>\n      <td>\n        <img src={prop.photo} alt=\"car\" width=\"128\" height=\"72\" />\n      </td>\n      <td>{prop.name}</td>\n      <td>{prop.price}</td>\n      <td>\n        <button\n          type=\"button\"\n          className={cx(\"btn\", \"btn-outline-danger\")}\n          onClick={() => prop.rmCart(prop.Product)}\n        >\n          <b>\n            <i className=\"fas fa-trash\"></i>\n          </b>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Cart;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.css\";\nimport Product from \"./components/Product\";\nimport Cart from \"./components/Cart\";\nimport cx from \"classnames\";\n\nclass App extends Component {\n  state = {\n    products: [\n      {\n        id: 1,\n        name: \"Mansory Stallone Black\",\n        price: 34300,\n        cart: false,\n        photo:\n          \"https://www.hdwallpapers.in/thumbs/2020/mansory_stallone_black_4k_5k_hd-t2.jpg\",\n      },\n      {\n        id: 2,\n        name: \"Pogea Racing Zeus\",\n        price: 65400,\n        cart: false,\n        photo:\n          \"https://www.hdwallpapers.in/thumbs/2019/pogea_racing_zeus_2019_4k-t2.jpg\",\n      },\n      {\n        id: 3,\n        name: \"Mitsubishi\",\n        price: 16700,\n        cart: false,\n        photo:\n          \"https://www.hdwallpapers.in/thumbs/2019/mitsubishi_mi_tech_concept_2019_4k_2-t2.jpg\",\n      },\n      {\n        id: 4,\n        name: \"Polestar 2\",\n        price: 46400,\n        cart: false,\n        photo: \"https://www.hdwallpapers.in/thumbs/2019/polestar_2_2019-t2.jpg\",\n      },\n      {\n        id: 5,\n        name: \"Range Rover Velar\",\n        price: 37800,\n        cart: false,\n        photo:\n          \"https://www.hdwallpapers.in/thumbs/2019/range_rover_velar_svautobiography_dynamic_edition_2019_4k_8k-t2.jpg\",\n      },\n      {\n        id: 6,\n        name: \"Acura NSX\",\n        price: 55700,\n        cart: false,\n        photo:\n          \"https://www.hdwallpapers.in/thumbs/2019/wolf_racing_ford_mustang_one_of_7_2019-t1.jpg\",\n      },\n    ],\n    count: 0,\n    totalPrice: 0,\n    show: false,\n    order: false,\n  };\n\n  Cart = (id) => {\n    var total = 0;\n    var count = 0;\n    const products = [...this.state.products];\n    const index = products.indexOf(id);\n    products[index] = { ...id };\n    products[index].cart = !products[index].cart;\n\n    for (var i = 0; i < products.length; i++) {\n      if (products[i].cart) {\n        count += 1;\n        total += products[i].price;\n      }\n    }\n    this.setState({ products, count: count, totalPrice: total, order: false });\n  };\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n  orderPlace = () => {\n    const products = [...this.state.products];\n    for (var i = 0; i < products.length; i++) {\n      products[i].cart = false;\n    }\n    this.setState({ products, count: 0, totalPrice: 0, order: true });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.products.id}</h1>\n        <div>\n          <nav\n            className={cx(\n              \"navbar\",\n              \"navbar-light\",\n              \"bg-light\",\n              \"justify-content-between\"\n            )}\n          >\n            <a className=\"navbar-brand\" href=\"#home\">\n              <b>Shopping Cart</b>\n            </a>\n            <form className=\"form-inline\">\n              <input\n                className={cx(\"form-control\", \"mr-sm-2\")}\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button\n                className={cx(\"btn\", \"btn-outline-success\", \"my-2\", \"my-sm-0\")}\n                type=\"submit\"\n              >\n                Search\n              </button>\n              <>\n                <Button id=\"cart\" variant=\"light\" onClick={this.handleShow}>\n                  <b>\n                    Cart &nbsp;\n                    <span\n                      className={cx(\"badge\", \"badge-pill\", \"badge-success\")}\n                    >\n                      {this.state.count === 0 ? null : this.state.count}\n                    </span>\n                  </b>\n                </Button>\n\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                  <Modal.Header closeButton>\n                    <Modal.Title>\n                      <b>Cart</b>\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    {this.state.count !== 0 ? (\n                      <Table responsive>\n                        <thead>\n                          <tr>\n                            <th></th>\n                            <th>Product Name</th>\n                            <th>Price</th>\n                            <th></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.products.map((product) =>\n                            !product.cart ? null : (\n                              <Cart\n                                name={product.name}\n                                price={product.price}\n                                photo={product.photo}\n                                rmCart={this.Cart}\n                                Product={product}\n                              />\n                            )\n                          )}\n                          <tr>\n                            <th></th>\n                            <th></th>\n                            <th>{this.state.totalPrice}</th>\n                            <th></th>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    ) : this.state.order ? (\n                      <div className={cx(\"container\", \"text-center\")}>\n                        <h3>\n                          <i\n                            className={cx(\n                              \"fa\",\n                              \"fa-shopping-cart\",\n                              \"fa-5x\",\n                              \"cartIcon\"\n                            )}\n                            aria-hidden=\"true\"\n                          >\n                            {\" \"}\n                          </i>\n                          <br />\n                          <br />\n\n                          <b>Order Placed</b>\n                        </h3>\n                      </div>\n                    ) : (\n                      <div className={cx(\"container\", \"text-center\")}>\n                        <h3>\n                          <i\n                            className={cx(\n                              \"fa\",\n                              \"fa-shopping-cart\",\n                              \"fa-5x\",\n                              \"cartIcon\"\n                            )}\n                            aria-hidden=\"true\"\n                          >\n                            {\" \"}\n                          </i>\n                          <br />\n                          <br />\n\n                          <b>Cart Is Empty</b>\n                        </h3>\n                      </div>\n                    )}\n                  </Modal.Body>\n                  <Modal.Footer>\n                    {this.state.count !== 0 ? (\n                      <div className={cx(\"container\", \"text-center\")}>\n                        <button\n                          className={cx(\n                            \"btn\",\n                            \"btn-outline-success\",\n                            \"my-2\",\n                            \"my-sm-0\"\n                          )}\n                          onClick={this.orderPlace}\n                          type=\"submit\"\n                        >\n                          Place Order\n                        </button>\n                      </div>\n                    ) : null}\n                  </Modal.Footer>\n                </Modal>\n              </>\n            </form>\n          </nav>\n        </div>\n        <div>\n          <div className=\"card-columns\">\n            {this.state.products.map((product) => (\n              <Product\n                id={product.id}\n                name={product.name}\n                price={product.price}\n                photo={product.photo}\n                addCart={this.Cart}\n                product={product}\n                bCart={\n                  !product.cart\n                    ? cx(\"btn\", \"btn-outline-dark\")\n                    : cx(\"btn\", \"btn-outline-success\")\n                }\n                mCart={!product.cart ? \"Add To Cart\" : \"In Cart\"}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}